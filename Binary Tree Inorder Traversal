94. Binary Tree Inorder Traversal
Given the root of a binary tree, return the inorder traversal of its nodes' values.

Example 1:
Input: root = [1,null,2,3]
Output: [1,3,2]

Example 2:
Input: root = [1,2,3,4,5,null,8,null,null,6,7,9]
Output: [4,2,6,5,7,1,3,9,8]

Example 3:
Input: root = []
Output: []

Example 4:
Input: root = [1]
Output: [1]

Approach : DFS (STACK)

class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>(); 
        Stack<TreeNode> stack = new Stack<>(); 
        TreeNode current = root; 
        while(current!= null || !stack.isEmpty()){
            while(current!=null){
                stack.push(current); 
                current = current.left; 
            }
            current = stack.pop();
            result.add(current.val);
            current = current.right; 
        }
        return result; 
    }
}
